

package Formularios;

import Esencial.Sonido;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Stalin
 */
public class Ayuda extends javax.swing.JFrame {
    
    private Fondo imagenFondo;
    private Sonido musicaFondo;
        

    /**
     * Creates new form Ayuda
     */
    public Ayuda() {
        
        imagenFondo = new Fondo("/Imagenes/fondoAyuda.jpg");
        initComponents();
       
        
        this.setSize(imagenFondo.getWidth(),imagenFondo.getHeight());
        this.setResizable(false);
        fondo.add(imagenFondo);
        fondo.setOpaque(false);
        this.setLocationRelativeTo(null);
        
        JOptionPane.showMessageDialog(this, "Bienvenido a la sección de ayuda, aqui encontrá información\n"
                                          + "del juego en sí (Reglas e Historia) y del problema planteado,\n"
                                          + "el cual motivó y condicionó el desarrollo de este software."
                                          ,"Preparando sección de Ayuda...",1,new ImageIcon(getClass().getResource("/Imagenes/ayuda.gif")));
        
        scrpInformacion.getVerticalScrollBar().setValue(scrpInformacion.getVerticalScrollBar().getMinimum());
        musicaFondo = new Sonido(this);
        musicaFondo.play();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        scrpInformacion = new javax.swing.JScrollPane();
        txtaInformacion = new javax.swing.JTextArea();
        btnVolver = new javax.swing.JButton();
        btnContacto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setBackground(new java.awt.Color(0, 153, 51));

        txtaInformacion.setEditable(false);
        txtaInformacion.setColumns(20);
        txtaInformacion.setRows(5);
        txtaInformacion.setText("UNIVERSIDAD NACIONAL EXPERIMENTAL DE GUAYANA\nVICE-RECTORADO ACADÉMICO\nCOORD. GENERAL DE PREGRADO\nPROYECTO DE CARRERA: INGENIERÍA EN INFORMÁTICA\n\nProf. Jannelly Bello\nUnidad Curricular: Técnicas de Programación III\n\t\t\nOBJETIVO\n\nEvaluar las habilidades de los estudiantes en cuanto al desarrollo de software, utilizando conceptos de la \nProgramación Orientada a Objetos y la aplicación de modelos de proceso de software en la solución de problemas.\n\n\nPLANTEAMIENTO DEL PROBLEMA\n\nUno es un juego de cartas que fue desarrollado en los años 70 por Merle Robbins.  Los derechos fueron comprados \npor International Games y actualmente es Mattel el encargado de producir y distribuir el juego.\n\nEl objetivo del juego es ser el primero en lograr 500 puntos. Los puntos se logran al deshacerse de las cartas \nde la mano antes que los oponentes. El jugador logra puntos con las cartas que el oponente no pudo descartar. \n\n\nEl número de participantes es de mínimo 2 personas, máximo 10.\n\n\nEl juego está conformado por 108 cartas distribuidas de la siguiente manera:\n\nCARTAS NORMALES: Representadas por números y colores.\n\n19 cartas azules - 0 a 9 (Dos cartas para cada numero excepto el 0. Solo tiene una)\n19 cartas verdes - 0 a 9 (Dos cartas para cada numero excepto el 0. Solo tiene una)\n19 cartas rojas - 0 a 9 (Dos cartas para cada numero excepto el 0. Solo tiene una)\n19 cartas amarillas - 0 a 9 (Dos cartas para cada numero excepto el 0. Solo tiene una).\n\nCARTAS ESPECIALES O COMODINES: Permiten alterar el flujo normal del juego mediante ciertas acciones\n\n8 cartas Toma dos - 2 azules, 2 verdes, 2 rojas y 2 amarillas\n8 cartas Reversa - 2 azules, 2 verdes, 2 rojas y 2 amarillas\n8 cartas Salta - 2 azules, 2 verdes, 2 rojas y 2 amarillas\n4 cartas de comodín de color\n4 cartas de comodín Toma cuatro\n\n\nSe pide desarrollar una solución informática para el juego descrito. Para ello deberá realizarse el análisis, \ndiseño e implementación de módulos que se detallan más adelante.\n\nReglas Del Juego: \n\n“Cada jugador toma una carta. La persona que tenga el número más grande será quien reparta. En esta parte del \njuego, las cartas de acción cuentan como cero.\n\nDespués de barajar las cartas, se reparten 7 cartas a cada jugador.\n\nLas cartas restantes se colocan cara abajo para formar la pila para ROBAR. La primera carta de la pila para \nROBAR se voltea para formar una pila para DESCARTAR. Si la carta que se voltea de la pila para ROBAR es una \ncarta de acción, se tienen que seguir ciertas reglas (ver FUNCIONES DE CARTAS DE ACCIÓN).\n\nEl jugador a la izquierda del repartidor empieza. Tiene que hacer coincidir, ya sea por número, color o símbolo, \nla carta en la pila de DESCARTE con una de sus cartas. Por ejemplo: Si la muestra es un 7 rojo, el jugador podrá \ndescartar una carta roja o un siete de cualquier color. El jugador también podrá tirar un Comodín de \ncolor (ver FUNCIONES DE CARTAS DE ACCIÓN).\n\nSi el jugador no tiene ninguna carta que corresponda a la carta de la pila para DESCARTAR, entonces deberá tomar \nuna carta de la pila para ROBAR. Si se puede jugar esta carta, el jugador la puede descartar en ese turno. \nDe lo contrario, el juego continúa con el siguiente jugador en turno.\n\nUn jugador puede optar por no jugar una carta jugable de su mano. De hacer esto, el jugador debe robar una carta \nde la pila para ROBAR. Si es una carta que coincida, ésta se puede descartar en el mismo turno, pero el jugador \nno puede usar otra carta de la mano después de haber robado.\n\n\n\nFUNCIONES DE LAS CARTAS DE ACCIÓN\n\nLas funciones de las cartas de acción, así como cuándo se pueden descartar, se describen abajo.\n\nCarta Toma Dos - Cuando se tira esta carta, el siguiente jugador roba dos cartas y pierde su turno. Esta carta \n\t     sólo se puede descartar sobre una carta del mismo color o sobre otra carta Toma dos. \n\t     Si ésta es la primera carta del juego que se voltea, se sigue la misma regla de juego.\n\nCarta Reversa - Cambia el sentido del juego. Si le tocara jugar al jugador de la izquierda de quien tira la carta,\n\t este jugador pierde su turno; en su lugar jugará la persona de la derecha, y el sentido se cambiará hacia la \n\t derecha. Esta carta sólo se puede descartar sobre una carta del mismo color o sobre otra carta Reversa. \n\t Si ésta es la primera carta del juego que se voltea, al repartidor le toca primero y el juego continúa hacia la \n\t derecha.\n\nCarta  Salta  -    Al jugador que le toque jugar pierde su turno y tirará el siguiente de acuerdo al sentido del juego.\n\tEsta carta sólo se puede descartar sobre una carta del mismo color o sobre otra carta Salta. \n\tSi ésta es la primera carta del juego que se voltea, se “salta” al jugador a la izquierda del \n\trepartidor y empieza el siguiente jugador.\n\nComodín De Color - El jugador que descarte esta carta dirá el nuevo color que se jugará o puede repetir el \n\t        que ya estaba para descartarse. Esta carta se puede tirar con cualquier carta; incluso, \n\t        puede ser utilizada en caso de tener alguna carta con el número o color correspondiente. \n\t        Si ésta es la primera carta del juego que se voltea, el jugador a la izquierda del repartidor \n\t        decide el color con el que empezará el juego.\n\nCarta Comodín Toma Cuatro  -  Esta es la mejor carta. No solamente quien la tira escoje su color, sino que además \n\t\thace que el siguiente jugador robe 4 cartas y pierda su turno. Desafortunadamente, \n\t\testa carta sólo se puede descartar si el jugador que la tiene no tiene otra carta en \n\t\tsu mano que coincida en color con la de la pila de DESCARTE. Sí se puede descartar \n\t\testa carta si el jugador tiene en su mano cartas que coincidan en número o cartas de \n\t\tacción. Un jugador con esta carta se puede arriesgar a descartarla “ilegalmente”, \n\t\tpero si se le sorprende se tienen que seguir ciertas reglas (ver CASTIGOS). Si ésta \n\t\tes la primera carta del juego que se voltea, se regresa a la pila y se voltea otra \n\t\tcarta.\n\nDECIR ‘UNO’\n\nCuando a un jugador le quede una sola carta, tiene que decir en voz alta “UNO”. De lo contrario, deberá robar \ndos cartas de la pila para ROBAR. Esto sólo es necesario en caso de que uno de los jugadores sorprenda al \njugador saliente sin haber dicho “UNO” (ver CASTIGOS).\n\nCuando un jugador descarte todas sus cartas, se acaba la mano. Los puntos se suman (ver PUNTUACIÓN) y el juego \nvuelve e empezar.\n\nSi la última carta del ganador fue una carta Toma dos o un Comodín Toma cuatro, el siguiente jugador deberá \nrobar las cartas correspondientes, ya que éstas contarán para los puntos del ganador. \n\nSi la pila para ROBAR se termina y ningún jugador ha ganado, deja la última carta y revuelve el monto para \nvoltearlo y tener nuevamente una pila de donde robar.\n\n\nPUNTUACIÓN\n\nCuando un jugador gana, se suman los puntos de las cartas que los oponentes no pudieron descartar. La puntuación \nserá como sigue:\n\nTodas las cartas con número . . . . . . . . . . . . . Valor del número\nToma Dos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 puntos\nReversa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 puntos\nSalta . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 puntos\nComodín . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 puntos\nComodín Toma cuatro . . . . . . . . . . . . . . . . . . . 50 puntos\n\nPARA GANAR EL JUEGO\n\nEl ganador es el primero en llegar a 500 puntos. También se pueden ir sumando los puntos de cada jugador al final\nde cada juego; así, cuando algún jugador llegue a 500, el que tenga menos puntos será el ganador.\n\nCASTIGOS\n\nSi a un jugador se le olvida decir “UNO” antes de que su penúltima carta toque la pila para DESCARTAR, pero se \nacuerda de hacerlo (y dice “UNO”) antes de que otro jugador lo sorprenda, no está sujeto al castigo.\n\nNo se puede sorprender a un jugador por no decir “UNO” sino hasta que su penúltima carta toque la pila para \nDESCARTAR. Tampoco no se puede sorprender a un jugador por no decir “UNO” después de que el siguiente jugador \nempiece su turno. “Empezar un turno” significa robar una carta de la pila para ROBAR o descartar una carta de su \npropia mano de cartas.\n\nSi un jugador le aconseja a otro tirar una carta, el primero deberá robar 2 cartas de la pila para ROBAR.\n\nSi un jugador descarta una carta equivocada y cualquiera de los jugadores se da cuenta, el jugador que descartó \ndeberá tomar su carta y robar otras 2 cartas de la pila para ROBAR. El juego continúa con la siguiente persona \nen turno.\n\nSi un jugador tira un Comodín Toma cuatro ilegalmente, (esto es, teniendo alguna carta con el color que \ncorresponda) y alguien lo desafía a mostrar sus cartas, deberá enseñar sus cartas al jugador que lo desafió.\n\nSi es culpable, deberá robar 4 cartas; si no lo es, el desafiante tendrá que robar 2 cartas, además de las 4 del \ncomodín. Este desafío sólo lo puede hacer el jugador a quien le toque tomar las 4 cartas, después de que se \ndescarte el Comodín Toma cuatro.” http://es.scribd.com/doc/62426655/reglas-del-juego-UNO-espanol.\n\n\nMODULOS A DESARROLLAR:\n\n  Modulo Gestión Usuario:\n\tPermite administrar la información de los distintos usuarios de j-UNO. \n\tDatos a registrar por usuario: Nombre, Apellido, Nickname (campo único por usuario), email, \n\timagen asociada, clave. Es posible modificar la información del usuario excepto el nickname.\n\tUn usuario puede dar de baja su cuenta temporalmente, con la posibilidad de reactivarla en otra \n\toportunidad.\n\n  Módulo Crear Partida:\n\tUn usuario puede crear partida en j-UNO. Para ello debe:\n\tIndicar cantidad de usuarios con los que se quiere jugar. (min 2- max 4). \n\tEl sistema de manera aleatoria genera partida con la cantidad de jugadores indicados. \n\tEl usuario podrá colocarles nombres a dichos jugadores e imagen que los identifique en la partida. \n\tAdicionalmente el usuario indicara modalidad de partida que puede ser de dos maneras: \n\t  1. Partida Rápida: Se gana cuando un jugador quede sin cartas.\n\t  2. Partida Acumulativa: Se gana cuando un jugador acumule cierta cantidad de puntos, \n\t     en este caso se le indica al usuario que indique la puntuación mínima acumulada para ganar.\n\tUn usuario podrá abandonar una partida en cualquier momento.\n\n  Módulo De Estadísticas:\n\tEl j-UNO debe generar estadísticas para cada usuario (registrado o generado aleatoriamente) que haya \n\tjugado partida, considerando: Cant. De partidas jugadas, Cantidad de partidas ganadas, cantidad de \n\tpartidas perdidas, cantidad de partidas abandonadas y posición en que ocupa en el ranking de jugadores \n\t(considerando partidas ganadas). \n\n  Módulo De Almacenamiento De Datos:\n\tModulo que se encarga del almacenamiento y carga de datos generadas por j-uno. Para ello es indispensable \n\tel uso de archivos XML.  La estructura y cantidad de archivos serán definidos por el equipo.\n\n\nCONSIDERACIONES FINALES:\n\t  Equipos conformados por 3 personas. Excepto un equipo de 2 personas. \n\t  El proyecto será corregido bajo el IDE Netbeans 7.0.\n\t  La partida debe ejecutarse en red. Min. 4 jugadores conectados.\n\t  La corrección exige la presencia de todos los integrantes del equipo, en caso contrario no se evaluará el proyecto.\n\t  Las entregas del proyecto se harán  en un sobre manila sellado e identificado con los nombres de los miembros \n   \t     del equipo. El sobre debe contener documentos impresos (NO CÖDIGO) y en digital las versiones de código. \n\n\nMETODOLOGIA DE DESARROLLO\n\tMetodología ágil para el desarrollo de Software. Programación Extrema.\n\n\nLIBRERIAS A UTILIZAR EN EL PROYECTO\n\t  JDOM: Librería para la gestión y manejo de archivos XML.\n\t  JAVADOC: Librería para generar la documentación del proyecto. \n\t  SOCKETS: Api de JAVA para conexión en red.\n\n\nCRONOGRAMA DE ENTREGAS\n      Semana\t   Fecha    Tipo de Evaluación\tPonderación\n\t13\t30/07/2014\tEntrega I\t    15%\n\t16\t01/10/2014\tEntrega II\t    20%\n\nCONSIDERACIONES ADICIONALES:\n\t\n\t A petición de la prof. se anula la creación de jugadores aleatorios por parte de la PC.\n\t Como el encargado de repartir de las cartas es el mismo software, el jugador que saque la mayor carta será qien empiece.");
        scrpInformacion.setViewportView(txtaInformacion);

        btnVolver.setText("Volver");
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
        });

        btnContacto.setText("Contacto");
        btnContacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnContactoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrpInformacion)
                .addContainerGap())
            .addGroup(fondoLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(88, 88, 88)
                .addComponent(btnContacto)
                .addContainerGap(160, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(scrpInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver)
                    .addComponent(btnContacto)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        musicaFondo.Stop();
        String[] args = null;
        Login.main(args);
        this.dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void btnContactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnContactoMouseClicked
        
        JOptionPane.showMessageDialog(this, "Para aclarar cualquier duda referente a este software\n"
                                          + "puede comunicarse con el administrador a través\n"
                                          + "del siguiente email stalinsf@hotmail.com"
                                          , "Contacto",1,new ImageIcon(getClass().getResource("/Imagenes/administrador.jpg")));
       
    }//GEN-LAST:event_btnContactoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ayuda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContacto;
    private javax.swing.JButton btnVolver;
    private javax.swing.JPanel fondo;
    private javax.swing.JScrollPane scrpInformacion;
    private javax.swing.JTextArea txtaInformacion;
    // End of variables declaration//GEN-END:variables
}
